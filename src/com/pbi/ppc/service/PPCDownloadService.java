/* * File Name:  PPCDownloadService.java * Copyright:  Beijing Jaeger Communication Electronic Technology Co., Ltd. Copyright YYYY-YYYY,  All rights reserved * Descriptions:  <Descriptions> * Changed By:   * Changed Time:  2014-1-17 * Changed Content:  <Changed Content> */package com.pbi.ppc.service;import com.pbi.ppc.domain.MountInfoBean;import com.pbi.ppc.utils.CommonUtils;import com.pbi.ppc.utils.StorageUtils;import android.app.Service;import android.content.Intent;import android.os.Handler;import android.os.IBinder;import android.os.Message;import android.util.Log;/** * <Functional overview> <Functional Details> *  * @author * @version [Version Number, 2014-1-17] * @see [Relevant Class/Method] * @since [Product/Module Version] */public class PPCDownloadService extends Service{    private static final String TAG = "PPCDownloadService";        public static final int DOWNLOAD_APK_FAILED = 202;        public static final int START_INSTALL_APK = 203;    private String apkPath;    private Handler mHandler = new Handler()    {                @Override        public void handleMessage(Message msg)        {            switch (msg.what)            {                case DOWNLOAD_APK_FAILED:                    Log.i(TAG, "--->>>download the apk failed.");                    break;                case START_INSTALL_APK:                    Log.i(TAG, "--->>>start install apk.");                    break;            }        }            };        @Override    public int onStartCommand(Intent intent, int flags, int startId)    {        apkPath = intent.getStringExtra("apk_path");        Log.i(TAG, "--->>> ppc download service start." + apkPath);        new DownloadApkTask(mHandler).run();        return super.onStartCommand(intent, flags, startId);    }        /**     * Override Method     *      * @param intent     * @return     */    @Override    public IBinder onBind(Intent intent)    {        // TODO Auto-generated method stub        return null;    }        class DownloadApkTask extends Thread    {        private Handler handler;                public DownloadApkTask(Handler handler)        {            super();            this.handler = handler;        }                @Override        public void run()        {            // check thea hdd;            StorageUtils util = new StorageUtils(PPCDownloadService.this);            int check = util.checkHDDSpace();            switch (check)            {                case 0:                    // download the apk.                    MountInfoBean mBean = util.getMobileHDDInfo();                    Log.i(TAG, "--->>> apk path: " + apkPath);                    Log.i(TAG, "--->>> storage path: " + mBean.getPath());                    CommonUtils.downLoadFile(PPCDownloadService.this, mHandler, apkPath);                    break;                case 1:                    Log.i(TAG, "--->>> not enough space.");                    handler.sendEmptyMessage(DOWNLOAD_APK_FAILED);                    break;                case 2:                    Log.i(TAG, "--->>> no devices.");                    handler.sendEmptyMessage(DOWNLOAD_APK_FAILED);                    break;            }        }    }    }